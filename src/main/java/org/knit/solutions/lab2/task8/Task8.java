package org.knit.solutions.lab2.task8;

import org.knit.TaskDescription;
import org.knit.solutions.Solution;

/**
 * üìå –û–ø–∏—Å–∞–Ω–∏–µ:
 * –ù–∞ –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∫–µ —Å–≤–µ—Ç–æ—Ñ–æ—Ä —É–ø—Ä–∞–≤–ª—è–µ—Ç –¥–≤–∏–∂–µ–Ω–∏–µ–º:
 * - –ö—Ä–∞—Å–Ω—ã–π —Å–≤–µ—Ç ‚Äì –º–∞—à–∏–Ω—ã —Å—Ç–æ—è—Ç (wait()).
 * - –ó–µ–ª–µ–Ω—ã–π —Å–≤–µ—Ç ‚Äì –º–∞—à–∏–Ω—ã –µ–¥—É—Ç (notifyAll()).
 * - –°–≤–µ—Ç–æ—Ñ–æ—Ä –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥.
 *
 * üîπ –ß—Ç–æ –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å?
 * ‚úî –ü–æ—Ç–æ–∫ "–°–≤–µ—Ç–æ—Ñ–æ—Ä" –∏–∑–º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç notifyAll().
 * ‚úî –ü–æ—Ç–æ–∫–∏ "–ú–∞—à–∏–Ω–∞" –∂–¥—É—Ç wait(), –µ—Å–ª–∏ –∫—Ä–∞—Å–Ω—ã–π —Å–≤–µ—Ç.
 */
@TaskDescription(taskNumber = 8, taskDescription = "–ü–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫: —Å–≤–µ—Ç–æ—Ñ–æ—Ä –∏ –º–∞—à–∏–Ω—ã")
public class Task8 implements Solution {
    public void execute() {
        Crossroads crossroads = new Crossroads();

        Thread threadTrafficLight = new Thread(new TrafficLight(crossroads, 5));
        Thread threadCars = new Thread(new Car(crossroads, 30));

        threadTrafficLight.start();
        threadCars.start();
    }
}
